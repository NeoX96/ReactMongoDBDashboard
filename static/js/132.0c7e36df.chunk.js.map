{"version":3,"file":"static/js/132.0c7e36df.chunk.js","mappings":"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","sources":["components/BarChart.jsx","components/Header.jsx","data/shopsData_live.js","scenes/bar.jsx"],"sourcesContent":["import { ResponsiveBar } from \"@nivo/bar\";\r\nimport { tokens } from \"../theme\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { watchCollection, getShopRevenueChartData } from \"../data/shopsData_live\";\r\n\r\nconst BarChart = ({ isDashboard = false }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  const [shopData, setShopData] = useState([]);\r\n\r\n\r\n  // Wird beim ersten Laden der Seite und beim Ändern der Daten in der MongoDB-Collection aufgerufen\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const data = await getShopRevenueChartData();\r\n      setShopData(data);\r\n    };\r\n\r\n      loadData();\r\n\r\n\r\n  }, []);\r\n\r\n  // Wird beim ersten Laden der Seite und beim Ändern der Daten in der MongoDB-Collection aufgerufen\r\n  useEffect(() => {\r\n    \r\n    // Update shopData state when a shop revenue data changes in MongoDB collection\r\n    const handleChange = async () => {\r\n      await watchCollection((updatedShop) => {\r\n        // Get index of updated shop in shopData array\r\n        const updatedShopIndex = shopData.findIndex((shop) => shop.id === updatedShop.ShopName);\r\n        \r\n        // If updated shop is found in shopData array\r\n        if (updatedShopIndex >= 0) {\r\n          // Update shopData with new revenue data\r\n          const updatedData = [...shopData];\r\n          updatedData[updatedShopIndex] = {\r\n            id: updatedShop.ShopName,\r\n            value: updatedShop.Revenue,\r\n          };\r\n          setShopData(updatedData);\r\n        }\r\n      });\r\n    };\r\n\r\n    if (shopData.length > 0) {\r\n      handleChange();\r\n    }\r\n\r\n  }, [shopData]);\r\n\r\n\r\n  return (\r\n    <ResponsiveBar\r\n      data={shopData}\r\n      theme={{\r\n        axis: {\r\n          domain: {\r\n            line: {\r\n              stroke: colors.grey[100],\r\n            },\r\n          },\r\n          legend: {\r\n            text: {\r\n              fill: colors.grey[100],\r\n            },\r\n          },\r\n          ticks: {\r\n            line: {\r\n              stroke: colors.grey[100],\r\n              strokeWidth: 1,\r\n            },\r\n            text: {\r\n              fill: colors.grey[100],\r\n            },\r\n          },\r\n        },\r\n        legends: {\r\n          text: {\r\n            fill: colors.grey[100],\r\n          },\r\n        },\r\n        tooltip: {\r\n          container: {\r\n            background: colors.grey[900],\r\n            color: colors.grey[100],\r\n          },\r\n        },\r\n      }}\r\n      \r\n      margin={{ top: 30, right: 40, bottom: 50, left: 70 }}\r\n      padding={0.4}\r\n      valueScale={{ type: \"linear\" }}\r\n      indexScale={{ type: \"band\", round: true }}\r\n      colors={{ scheme: \"nivo\" }}\r\n      defs={[\r\n        {\r\n          id: \"lines\",\r\n          type: \"patternLines\",\r\n          background: \"inherit\",\r\n          color: \"#eed312\",\r\n          rotation: -45,\r\n          lineWidth: 6,\r\n          spacing: 10,\r\n        }\r\n\r\n      ]}\r\n  \r\n      fill={[\r\n        {\r\n          match: {\r\n            id: \"value\",\r\n          },\r\n          id: \"lines\",\r\n        }\r\n      ]}\r\n\r\n      borderColor={{\r\n        from: \"color\",\r\n        modifiers: [[\"darker\", \"1.6\"]],\r\n      }}\r\n      axisTop={null}\r\n      axisRight={null}\r\n      axisBottom={{\r\n        tickSize: 5,\r\n        tickPadding: 5,\r\n        tickRotation: 0,\r\n        legend: isDashboard ? undefined : \"Shop Name\",\r\n        legendPosition: \"middle\",\r\n        legendOffset: 32,\r\n      }}\r\n      axisLeft={{\r\n        tickSize: 5,\r\n        tickPadding: 5,\r\n        tickRotation: 0,\r\n        legend: isDashboard ? undefined : \"Einnahmen\",\r\n        legendPosition: \"middle\",\r\n        legendOffset: -55,\r\n      }}\r\n      enableLabel={true}\r\n      labelSkipWidth={12}\r\n      labelSkipHeight={12}\r\n      labelTextColor={{\r\n        from: \"color\",\r\n        modifiers: [[\"darker\", 1.6]],\r\n      }}\r\n      animate={true}\r\n      motionStiffness={90}\r\n      motionDamping={15}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n","import { Typography, Box, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../theme\";\r\n\r\nconst Header = ({ title, subtitle }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  return (\r\n    <Box mb=\"30px\">\r\n      <Typography\r\n        variant=\"h2\"\r\n        color={colors.grey[100]}\r\n        fontWeight=\"bold\"\r\n        sx={{ m: \"0 0 5px 0\" }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Typography variant=\"h5\" color={colors.greenAccent[400]}>\r\n        {subtitle}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import * as Realm from \"realm-web\";\r\n\r\nconst APP_ID = \"data-uilqj\";\r\nconst API_KEY = \"7PodJEFumzYtvIBgsWkiBMp5N1ifzHkrRMO9XTvRSxVBH5TIq5kJdXhLxE7RKWKM\";\r\nconst DATA_SOURCE = \"DBDatabase\";\r\nconst DATABASE_NAME = \"Top10\";\r\nconst COLLECTION_NAME = \"10Shops\";\r\n\r\n\r\nconst app = new Realm.App(APP_ID);\r\nconst credentials = Realm.Credentials.apiKey(API_KEY);\r\n\r\n/**\r\n * Loggt einen Benutzer bei der Realm-Instanz ein.\r\n *\r\n * @returns {object} Der eingeloggte Benutzer.\r\n */\r\nasync function realmLogin() {\r\n  try {\r\n    // Überprüfe, ob app definiert ist\r\n    if (!app) {\r\n      console.error(\"app is not defined\");\r\n      return;\r\n    }\r\n\r\n    const user = await app.logIn(credentials);\r\n\r\n    if (user.id !== app.currentUser?.id) {\r\n      console.error(\"User is not logged in\");\r\n    }\r\n\r\n    console.log(\"User logged in:\", user);\r\n    return user;\r\n  } catch (err) {\r\n    console.error(\"Failed to log in\", err);\r\n  }\r\n}\r\n\r\n\r\nasync function getMongoCollection() {\r\n  const user = app.currentUser ?? await realmLogin();\r\n\r\n  const mongo = user.mongoClient(DATA_SOURCE);\r\n  const db = mongo.db(DATABASE_NAME);\r\n  if (!db) {\r\n    throw new Error(`Failed to connect to database ${DATABASE_NAME}`);\r\n  }\r\n  const collection = db.collection(COLLECTION_NAME);\r\n\r\n  if (!collection) {\r\n    throw new Error(`Failed to connect to collection ${COLLECTION_NAME}`);\r\n  }\r\n\r\n  return collection;\r\n}\r\n\r\n\r\n/**\r\n * Watch a MongoDB collection for changes and call the onChange function when a document changes.\r\n * @param {function} onChange - Function to call when a document changes.\r\n * @returns {function} Function to stop watching the collection.\r\n */\r\nexport async function watchCollection(onChange) {\r\n  try {\r\n    // Get the MongoDB collection.\r\n    const collection = await getMongoCollection();\r\n    \r\n    // Create a change stream for the collection.\r\n    const changeStream = await collection.watch();\r\n\r\n    // Listen for changes in the collection.\r\n    for await (const event of changeStream) {\r\n      // Get the updated document from the collection.\r\n      const updatedDocument = await collection.findOne({ _id: event.documentKey._id });\r\n\r\n      // Call the onChange function if it is defined.\r\n      if (typeof onChange === \"function\") {\r\n        onChange(updatedDocument);\r\n      }\r\n\r\n      // Log that data has changed.\r\n      console.log(\"Data changed:\", updatedDocument);\r\n    }\r\n\r\n    // Return a function to stop watching the collection.\r\n    return () => {\r\n      changeStream.close();\r\n    };\r\n  } catch (err) {\r\n    console.error(\"Failed to watch collection\", err);\r\n    // alert(\"Failed to watch collection\", err);\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Gibt die Daten der MongoDB-Collection zurück und sortiert sie nach Revenue absteigend.\r\n *  \r\n * @returns {array} Ein Array mit den sortierten Daten der MongoDB-Collection. ShopName und Revenue\r\n *  \r\n */\r\nexport async function getShopRevenueChartData() {\r\n  const collection = await getMongoCollection();\r\n  const data = await collection.aggregate([\r\n    { $sort: { Revenue: -1 } },\r\n    {\r\n      $project: {\r\n        _id: 0,\r\n        id: \"$ShopName\",\r\n        label: \"$ShopName\",\r\n        value: \"$Revenue\",\r\n      },\r\n    },\r\n  ]);\r\n\r\n  return data;\r\n}\r\n\r\n\r\n\r\n/**\r\n * \r\n * @returns {number} Summe der Revenue\r\n */\r\nexport async function getSumOfRevenue() {\r\n  const collection = await getMongoCollection();\r\n\r\n  const data = await collection.aggregate([\r\n    { $group: { _id: null, sum: { $sum: \"$Revenue\" } } },\r\n  ]);\r\n\r\n  return data[0].sum;\r\n}\r\n\r\n/**\r\n * \r\n * @returns {Array} ShopName Country Revenue Year, sortiert nach Revenue absteigend\r\n *\r\n */\r\nexport async function getShopsData() {\r\n  const collection = await getMongoCollection();\r\n\r\n  const data = await collection.aggregate([\r\n    { $project: { ShopName: 1, Country: 1, Revenue: 1, Year: 1 } },\r\n    { $sort: { Revenue: -1 } },    \r\n  ]);\r\n\r\n  console.log(\"DataShops:\", data);\r\n  return data;\r\n}","import { Box } from \"@mui/material\";\r\nimport Header from \"../components/Header\";\r\nimport BarChart from \"../components/BarChart\";\r\n\r\nconst Bar = () => {\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header title=\"Bar Chart\" subtitle=\"Simple Bar Chart\" />\r\n      <Box height=\"75vh\">\r\n        <BarChart />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Bar;\r\n"],"names":["_ref","_ref$isDashboard","isDashboard","theme","useTheme","colors","tokens","palette","mode","_useState","useState","_useState2","_slicedToArray","shopData","setShopData","useEffect","loadData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getShopRevenueChartData","sent","stop","apply","arguments","handleChange","_ref3","_callee2","_context2","watchCollection","updatedShop","updatedShopIndex","findIndex","shop","id","ShopName","updatedData","_toConsumableArray","value","Revenue","length","_jsx","ResponsiveBar","axis","domain","line","stroke","grey","legend","text","fill","ticks","strokeWidth","legends","tooltip","container","background","color","margin","top","right","bottom","left","padding","valueScale","type","indexScale","round","scheme","defs","rotation","lineWidth","spacing","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","undefined","legendPosition","legendOffset","axisLeft","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping","title","subtitle","_jsxs","Box","mb","children","Typography","variant","fontWeight","sx","m","greenAccent","DATA_SOURCE","DATABASE_NAME","COLLECTION_NAME","app","Realm","credentials","realmLogin","_realmLogin","_app$currentUser","user","console","error","abrupt","logIn","currentUser","log","t0","getMongoCollection","_getMongoCollection","_app$currentUser2","mongo","db","collection","mongoClient","Error","concat","_x","_watchCollection","_callee3","onChange","changeStream","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","event","updatedDocument","_context3","watch","_asyncIterator","done","findOne","_id","documentKey","return","finish","close","t1","_getShopRevenueChartData","_callee4","_context4","aggregate","$sort","$project","label","getSumOfRevenue","_getSumOfRevenue","_callee5","_context5","$group","sum","$sum","getShopsData","_getShopsData","_callee6","_context6","Country","Year","Header","height","BarChart"],"sourceRoot":""}