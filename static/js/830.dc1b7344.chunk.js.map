{"version":3,"file":"static/js/830.dc1b7344.chunk.js","mappings":"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","sources":["../node_modules/d3-shape/src/arc.js","../node_modules/@nivo/arcs/src/arc_labels/ArcLabel.tsx","../node_modules/@nivo/arcs/src/utils.ts","../node_modules/@nivo/arcs/src/arcTransitionMode.ts","../node_modules/@nivo/arcs/src/centers.ts","../node_modules/@nivo/arcs/src/arc_labels/ArcLabelsLayer.tsx","../node_modules/@nivo/arcs/src/arc_link_labels/ArcLinkLabel.tsx","../node_modules/@nivo/arcs/src/arc_link_labels/compute.ts","../node_modules/@nivo/arcs/src/arc_link_labels/useArcLinkLabelsTransition.ts","../node_modules/@nivo/arcs/src/arc_link_labels/ArcLinkLabelsLayer.tsx","../node_modules/@nivo/arcs/src/ArcShape.tsx","../node_modules/@nivo/arcs/src/interpolateArc.ts","../node_modules/@nivo/arcs/src/ArcsLayer.tsx","../node_modules/@nivo/arcs/src/useArcsTransition.ts","../node_modules/@nivo/arcs/src/useArcGenerator.ts","../node_modules/d3-shape/src/descending.js","../node_modules/d3-shape/src/identity.js","../node_modules/@nivo/pie/src/PieLegends.tsx","../node_modules/@nivo/pie/src/props.ts","../node_modules/@nivo/pie/src/PieTooltip.tsx","../node_modules/@nivo/pie/src/hooks.ts","../node_modules/d3-shape/src/pie.js","../node_modules/@nivo/arcs/src/boundingBox.ts","../node_modules/@nivo/pie/src/Arcs.tsx","../node_modules/@nivo/pie/src/Pie.tsx","../node_modules/@nivo/pie/src/ResponsivePie.tsx","../node_modules/d3-path/src/path.js","../node_modules/d3-shape/src/line.js","../node_modules/d3-shape/src/point.js"],"sourcesContent":["import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","import { CSSProperties } from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\n\nconst staticStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\nexport interface ArcLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        progress: SpringValue<number>\n        transform: Interpolation<string>\n        textColor: string\n    }\n}\n\nexport const ArcLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={style.transform} opacity={style.progress} style={staticStyle}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees, positionFromAngle, degreesToRadians } from '@nivo/core'\nimport { DatumWithArc } from './types'\n\n/**\n * Make sure an angle (expressed in radians)\n * always falls in the range 0~2*PI.\n */\nexport const getNormalizedAngle = (angle: number) => {\n    let normalizedAngle = angle % (Math.PI * 2)\n    if (normalizedAngle < 0) {\n        normalizedAngle += Math.PI * 2\n    }\n\n    return normalizedAngle\n}\n\n/**\n * Filter out arcs with a length below `skipAngle`.\n */\nexport const filterDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) =>\n    data.filter(\n        datum => Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle\n    )\n\n/**\n * Memoized version of `filterDataBySkipAngle`.\n */\nexport const useFilteredDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) => useMemo(() => filterDataBySkipAngle(data, skipAngle), [data, skipAngle])\n\nexport const svgEllipticalArcCommand = (\n    radius: number,\n    largeArcFlag: 0 | 1,\n    sweepFlag: 0 | 1,\n    x: number,\n    y: number\n) =>\n    [\n        'A',\n        radius,\n        radius,\n        0, // x-axis-rotation\n        largeArcFlag,\n        sweepFlag,\n        x,\n        y,\n    ].join(' ')\n\nexport const generateSvgArc = (\n    radius: number,\n    originalStartAngle: number,\n    originalEndAngle: number\n): string => {\n    const startAngle = Math.min(originalStartAngle, originalEndAngle)\n    const endAngle = Math.max(originalStartAngle, originalEndAngle)\n\n    const start = positionFromAngle(degreesToRadians(endAngle), radius)\n    const end = positionFromAngle(degreesToRadians(startAngle), radius)\n\n    // we have a full circle, we cannot use a single elliptical arc\n    // to draw it, so we use 2 in that case.\n    if (endAngle - startAngle >= 360) {\n        const mid = positionFromAngle(degreesToRadians(startAngle + 180), radius)\n\n        return [\n            `M ${start.x} ${start.y}`,\n            svgEllipticalArcCommand(radius, 1, 1, mid.x, mid.y),\n            `M ${start.x} ${start.y}`,\n            svgEllipticalArcCommand(radius, 1, 0, mid.x, mid.y),\n        ].join(' ')\n    }\n\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1\n\n    return [\n        `M ${start.x} ${start.y}`,\n        svgEllipticalArcCommand(radius, largeArcFlag, 0, end.x, end.y),\n    ].join(' ')\n}\n","import { Arc, DatumWithArc } from './types'\nimport { useMemo } from 'react'\n\nexport interface ArcTransitionModeConfig {\n    enter: (arc: Arc) => Arc\n    update: (arc: Arc) => Arc\n    leave: (arc: Arc) => Arc\n}\n\nexport const arcTransitionModes = [\n    'startAngle',\n    'middleAngle',\n    'endAngle',\n    'innerRadius',\n    'centerRadius',\n    'outerRadius',\n    'pushIn',\n    'pushOut',\n] as const\nexport type ArcTransitionMode = typeof arcTransitionModes[number]\n\nexport const arcTransitionModeById: Record<ArcTransitionMode, ArcTransitionModeConfig> = {\n    startAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n    },\n    middleAngle: {\n        enter: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n    },\n    endAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n    },\n    innerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n    },\n    centerRadius: {\n        enter: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n    },\n    outerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n    pushIn: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n    },\n    pushOut: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n}\n\nexport interface TransitionExtra<Datum extends DatumWithArc, ExtraProps> {\n    enter: (datum: Datum) => ExtraProps\n    update: (datum: Datum) => ExtraProps\n    leave: (datum: Datum) => ExtraProps\n}\n\nexport const useArcTransitionMode = <Datum extends DatumWithArc, ExtraProps>(\n    mode: ArcTransitionMode,\n    extraTransition?: TransitionExtra<Datum, ExtraProps>\n) =>\n    useMemo(() => {\n        const transitionMode = arcTransitionModeById[mode]\n\n        return {\n            enter: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.enter(datum.arc),\n                ...(extraTransition ? extraTransition.enter(datum) : {}),\n            }),\n            update: (datum: Datum) => ({\n                progress: 1,\n                ...transitionMode.update(datum.arc),\n                ...(extraTransition ? extraTransition.update(datum) : {}),\n            }),\n            leave: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.leave(datum.arc),\n                ...(extraTransition ? extraTransition.leave(datum) : {}),\n            }),\n        }\n    }, [mode, extraTransition])\n","import { useMemo } from 'react'\nimport { useTransition, to, SpringValue } from '@react-spring/web'\nimport {\n    // @ts-ignore\n    midAngle,\n    positionFromAngle,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Arc, DatumWithArc, Point } from './types'\nimport { filterDataBySkipAngle } from './utils'\nimport { ArcTransitionMode, TransitionExtra, useArcTransitionMode } from './arcTransitionMode'\n\nexport const computeArcCenter = (arc: Arc, offset: number): Point => {\n    const angle = midAngle(arc) - Math.PI / 2\n    const radius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) * offset\n\n    return positionFromAngle(angle, radius)\n}\n\nexport const interpolateArcCenter =\n    (offset: number) =>\n    (\n        startAngleValue: SpringValue<number>,\n        endAngleValue: SpringValue<number>,\n        innerRadiusValue: SpringValue<number>,\n        outerRadiusValue: SpringValue<number>\n    ) =>\n        to(\n            [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n            (startAngle, endAngle, innerRadius, outerRadius) => {\n                const centroid = computeArcCenter(\n                    { startAngle, endAngle, innerRadius, outerRadius },\n                    offset\n                )\n\n                return `translate(${centroid.x},${centroid.y})`\n            }\n        )\n\nexport const useArcCentersTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset = 0.5,\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArcCenter(offset),\n    }\n}\n\nexport interface ArcCenter<Datum extends DatumWithArc> extends Point {\n    data: Datum\n}\n\n/**\n * Compute an array of arc centers from an array of data containing arcs.\n *\n * If you plan to animate those, you could use `useArcCentersTransition`\n * instead, you could use the returned array with react-spring `useTransition`,\n * but this would lead to cartesian transitions (x/y), while `useArcCentersTransition`\n * will generate proper transitions using radius/angle.\n */\nexport const useArcCenters = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    offset = 0.5,\n    skipAngle = 0,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset?: number\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // this can be used to append extra properties to the centers,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: Datum) => ExtraProps\n}): (ArcCenter<Datum> & ExtraProps)[] =>\n    useMemo(\n        () =>\n            filterDataBySkipAngle<Datum>(data, skipAngle)\n                // compute position and extra props for each eligible datum\n                .map(datum => {\n                    const position = computeArcCenter(datum.arc, offset)\n\n                    return {\n                        ...computeExtraProps(datum),\n                        x: position.x,\n                        y: position.y,\n                        data: datum,\n                    }\n                }),\n        [data, offset, skipAngle, computeExtraProps]\n    )\n","import { createElement, useMemo } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, radiansToDegrees, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useArcCentersTransition } from '../centers'\nimport { ArcTransitionMode } from '../arcTransitionMode'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabelsProps } from './props'\nimport { ArcLabel, ArcLabelProps } from './ArcLabel'\n\nexport type ArcLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: PropertyAccessor<Datum, string>\n    radiusOffset: ArcLabelsProps<Datum>['arcLabelsRadiusOffset']\n    skipAngle: ArcLabelsProps<Datum>['arcLabelsSkipAngle']\n    textColor: ArcLabelsProps<Datum>['arcLabelsTextColor']\n    transitionMode: ArcTransitionMode\n    component?: ArcLabelsProps<Datum>['arcLabelsComponent']\n}\n\nexport const ArcLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    transitionMode,\n    label: labelAccessor,\n    radiusOffset,\n    skipAngle,\n    textColor,\n    component = ArcLabel,\n}: ArcLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useMemo(\n        () =>\n            data.filter(datum => {\n                return (\n                    Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                    skipAngle\n                )\n            }),\n        [data, skipAngle]\n    )\n\n    const { transition, interpolate } = useArcCentersTransition<Datum>(\n        filteredData,\n        radiusOffset,\n        transitionMode\n    )\n\n    const Label: ArcLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        transform: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textColor: getTextColor(datum),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import { useTheme } from '@nivo/core'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { DatumWithArcAndColor } from '../types'\n\nexport interface ArcLinkLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        path: Interpolation<string>\n        thickness: number\n        textPosition: Interpolation<string>\n        textAnchor: Interpolation<'start' | 'end'>\n        linkColor: SpringValue<string>\n        opacity: SpringValue<number>\n        textColor: SpringValue<string>\n    }\n}\n\nexport const ArcLinkLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLinkLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g opacity={style.opacity}>\n            <animated.path\n                fill=\"none\"\n                stroke={style.linkColor}\n                strokeWidth={style.thickness}\n                d={style.path}\n            />\n            <animated.text\n                transform={style.textPosition}\n                textAnchor={style.textAnchor}\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { positionFromAngle } from '@nivo/core'\nimport { Arc, Point } from '../types'\nimport { getNormalizedAngle } from '../utils'\nimport { ArcLink } from './types'\n\n/**\n * Compute text anchor for a given arc.\n *\n * `computeArcLink` already computes a `side`, but when using\n * `react-spring`, you cannot have a single interpolation\n * returning several output values, so we need to compute\n * them in separate interpolations.\n */\nexport const computeArcLinkTextAnchor = (arc: Arc): 'start' | 'end' => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        return 'start'\n    }\n\n    return 'end'\n}\n\n/**\n * Compute the link of a single arc, returning its points,\n * please note that points coordinates are relative to\n * the center of the arc.\n */\nexport const computeArcLink = (\n    arc: Arc,\n    offset: number,\n    diagonalLength: number,\n    straightLength: number\n): ArcLink => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n    const point0: Point = positionFromAngle(centerAngle, arc.outerRadius + offset)\n    const point1: Point = positionFromAngle(centerAngle, arc.outerRadius + offset + diagonalLength)\n\n    let side: ArcLink['side']\n    let point2: Point\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        side = 'after'\n        point2 = {\n            x: point1.x + straightLength,\n            y: point1.y,\n        }\n    } else {\n        side = 'before'\n        point2 = {\n            x: point1.x - straightLength,\n            y: point1.y,\n        }\n    }\n\n    return {\n        side,\n        points: [point0, point1, point2],\n    }\n}\n","import { useMemo } from 'react'\nimport { SpringValue, useTransition, to } from '@react-spring/web'\nimport { line } from 'd3-shape'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, Point } from '../types'\nimport { useFilteredDataBySkipAngle } from '../utils'\nimport { computeArcLink, computeArcLinkTextAnchor } from './compute'\n\nconst lineGenerator = line<Point>()\n    .x(d => d.x)\n    .y(d => d.y)\n\ntype AnimatedProps = {\n    startAngle: number\n    endAngle: number\n    innerRadius: number\n    outerRadius: number\n    offset: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    linkColor: string\n    textColor: string\n    opacity: number\n}\n\nconst useTransitionPhases = <Datum extends DatumWithArcAndColor>({\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset,\n    getLinkColor,\n    getTextColor,\n}: Pick<AnimatedProps, 'offset' | 'diagonalLength' | 'straightLength' | 'textOffset'> & {\n    getLinkColor: (datum: Datum) => string\n    getTextColor: (datum: Datum) => string\n}): Record<'enter' | 'update' | 'leave', (datum: Datum) => AnimatedProps> =>\n    useMemo(\n        () => ({\n            enter: (datum: Datum) => ({\n                startAngle: datum.arc.startAngle,\n                endAngle: datum.arc.endAngle,\n                innerRadius: datum.arc.innerRadius,\n                outerRadius: datum.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(datum),\n                textColor: getTextColor(datum),\n                opacity: 0,\n            }),\n            update: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength,\n                straightLength,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 1,\n            }),\n            leave: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 0,\n            }),\n        }),\n        [diagonalLength, straightLength, textOffset, getLinkColor, getTextColor]\n    )\n\nconst interpolateLink = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated\n        ) => {\n            const { points } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            return lineGenerator(points)\n        }\n    )\n\nconst interpolateTextAnchor = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return computeArcLinkTextAnchor({\n                startAngle,\n                endAngle,\n                innerRadius,\n                outerRadius,\n            })\n        }\n    )\n\n/**\n * Interpolating the text position involves almost the same computation\n * as `interpolateLink`, unfortunately `react-spring` does not support\n * multiple output values from a single interpolation.\n *\n * We should revise this if `react-spring` adds this feature at some point.\n */\nconst interpolateTextPosition = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>,\n    textOffsetValue: SpringValue<AnimatedProps['textOffset']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n            textOffsetValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated,\n            textOffset\n        ) => {\n            const { points, side } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            const position = points[2]\n            if (side === 'before') {\n                position.x -= textOffset\n            } else {\n                position.x += textOffset\n            }\n\n            return `translate(${position.x},${position.y})`\n        }\n    )\n\n/**\n * This hook can be used to animate a group of arc link labels,\n * if you just want to compute the labels, please use `useArcLinkLabels`.\n */\nexport const useArcLinkLabelsTransition = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset = 0,\n    diagonalLength,\n    straightLength,\n    skipAngle = 0,\n    textOffset,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    skipAngle?: number\n    textOffset: number\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useFilteredDataBySkipAngle<Datum>(data, skipAngle)\n    const transitionPhases = useTransitionPhases<Datum>({\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        getLinkColor,\n        getTextColor,\n    })\n\n    const transition = useTransition<Datum, AnimatedProps>(filteredData, {\n        keys: datum => datum.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    }\n}\n","import { createElement } from 'react'\nimport { usePropertyAccessor } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcLinkLabelsTransition } from './useArcLinkLabelsTransition'\nimport { ArcLinkLabelsProps } from './props'\nimport { ArcLinkLabel, ArcLinkLabelProps } from './ArcLinkLabel'\n\nexport type ArcLinkLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLinkLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLinkLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: ArcLinkLabelsProps<Datum>['arcLinkLabel']\n    skipAngle: ArcLinkLabelsProps<Datum>['arcLinkLabelsSkipAngle']\n    offset: ArcLinkLabelsProps<Datum>['arcLinkLabelsOffset']\n    diagonalLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsDiagonalLength']\n    straightLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsStraightLength']\n    strokeWidth: ArcLinkLabelsProps<Datum>['arcLinkLabelsThickness']\n    textOffset: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextOffset']\n    textColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextColor']\n    linkColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsColor']\n    component?: ArcLinkLabelComponent<Datum>\n}\n\nexport const ArcLinkLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    label: labelAccessor,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    strokeWidth,\n    textOffset,\n    textColor,\n    linkColor,\n    component = ArcLinkLabel,\n}: ArcLinkLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n\n    const { transition, interpolateLink, interpolateTextAnchor, interpolateTextPosition } =\n        useArcLinkLabelsTransition<Datum>({\n            data,\n            skipAngle,\n            offset,\n            diagonalLength,\n            straightLength,\n            textOffset,\n            linkColor,\n            textColor,\n        })\n\n    const Label: ArcLinkLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        thickness: strokeWidth,\n                        path: interpolateLink(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength\n                        ),\n                        textAnchor: interpolateTextAnchor(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textPosition: interpolateTextPosition(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength,\n                            transitionProps.textOffset\n                        ),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import { useCallback } from 'react'\nimport * as React from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { DatumWithArcAndColor } from './types'\n\nexport type ArcMouseHandler<Datum extends DatumWithArcAndColor> = (\n    datum: Datum,\n    event: React.MouseEvent<SVGPathElement>\n) => void\n\nexport interface ArcShapeProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    style: {\n        opacity: SpringValue<number>\n        color: SpringValue<string>\n        borderWidth: number\n        borderColor: SpringValue<string>\n        path: Interpolation<string>\n    }\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n}\n\n/**\n * A simple arc component to be used typically with an `ArcsLayer`.\n *\n * Please note that the component accepts `SpringValue`s instead of\n * regular values to support animations.\n */\nexport const ArcShape = <Datum extends DatumWithArcAndColor>({\n    datum,\n    style,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: ArcShapeProps<Datum>) => {\n    const handleClick = useCallback(event => onClick?.(datum, event), [onClick, datum])\n\n    const handleMouseEnter = useCallback(\n        event => onMouseEnter?.(datum, event),\n        [onMouseEnter, datum]\n    )\n\n    const handleMouseMove = useCallback(event => onMouseMove?.(datum, event), [onMouseMove, datum])\n\n    const handleMouseLeave = useCallback(\n        event => onMouseLeave?.(datum, event),\n        [onMouseLeave, datum]\n    )\n\n    return (\n        <animated.path\n            d={style.path}\n            opacity={style.opacity}\n            fill={datum.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            onClick={onClick ? handleClick : undefined}\n            onMouseEnter={onMouseEnter ? handleMouseEnter : undefined}\n            onMouseMove={onMouseMove ? handleMouseMove : undefined}\n            onMouseLeave={onMouseLeave ? handleMouseLeave : undefined}\n        />\n    )\n}\n","import { to, SpringValue } from '@react-spring/web'\nimport { ArcGenerator } from './types'\n\n/**\n * Directly animating paths for arcs leads to sub-optimal results\n * as the interpolation is going to be linear while we deal with polar coordinates,\n * this interpolator is going to generate proper arc transitions.\n * It should be used with the `useAnimatedArc` or `useArcsTransition` hooks.\n */\nexport const interpolateArc = (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>,\n    arcGenerator: ArcGenerator\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return arcGenerator({\n                startAngle,\n                endAngle,\n                innerRadius: Math.max(0, innerRadius),\n                outerRadius: Math.max(0, outerRadius),\n            })\n        }\n    )\n","import { createElement } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, ArcGenerator } from './types'\nimport { useArcsTransition } from './useArcsTransition'\nimport { ArcTransitionMode } from './arcTransitionMode'\nimport { ArcMouseHandler, ArcShape, ArcShapeProps } from './ArcShape'\n\nexport type ArcComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcShapeProps<Datum>\n) => JSX.Element\n\ninterface ArcsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    arcGenerator: ArcGenerator\n    borderWidth: number\n    borderColor: InheritedColorConfig<Datum>\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n    transitionMode: ArcTransitionMode\n    component?: ArcComponent<Datum>\n}\n\nexport const ArcsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    transitionMode,\n    component = ArcShape,\n}: ArcsLayerProps<Datum>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<Datum>(borderColor, theme)\n\n    const { transition, interpolate } = useArcsTransition<\n        Datum,\n        {\n            opacity: number\n            color: string\n            borderColor: string\n        }\n    >(data, transitionMode, {\n        enter: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        update: datum => ({\n            opacity: 1,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        leave: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n    })\n\n    const Arc: ArcComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Arc, {\n                    key: datum.id,\n                    datum,\n                    style: {\n                        ...transitionProps,\n                        borderWidth,\n                        path: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            arcGenerator\n                        ),\n                    },\n                    onClick,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                })\n            })}\n        </g>\n    )\n}\n","import { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { DatumWithArc } from './types'\nimport { ArcTransitionMode, useArcTransitionMode, TransitionExtra } from './arcTransitionMode'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a group of arcs,\n * if you want to animate a single arc,\n * please have a look at the `useAnimatedArc` hook.\n */\nexport const useArcsTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArc,\n    }\n}\n","import { useMemo } from 'react'\nimport { arc as d3Arc } from 'd3-shape'\nimport { ArcGenerator, Arc } from './types'\n\n/**\n * Memoize a d3 arc generator.\n *\n * Please note that both inner/outer radius aren't static\n * and should come from the arc itself, while it requires\n * more props on the arcs, it provides more flexibility\n * because it's not limited to pie then but can also work\n * with charts such as sunbursts.\n */\nexport const useArcGenerator = ({\n    cornerRadius = 0,\n    padAngle = 0,\n}: {\n    cornerRadius?: number\n    padAngle?: number\n} = {}): ArcGenerator =>\n    useMemo(\n        () =>\n            d3Arc<Arc>()\n                .innerRadius(arc => arc.innerRadius)\n                .outerRadius(arc => arc.outerRadius)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle),\n        [cornerRadius, padAngle]\n    )\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, ComputedDatum, DatumId } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    toggleSerie: (id: DatumId) => void\n}\n\nconst PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    data,\n    toggleSerie,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={legend.data ?? data}\n                    toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default PieLegends\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ArcTransitionMode } from '@nivo/arcs'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['arcLinkLabels', 'arcs', 'arcLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // arc labels\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // arc link labels\n    enableArcLinkLabels: true,\n    arcLinkLabel: 'id',\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: { theme: 'labels.text.fill' },\n    arcLinkLabelsColor: { theme: 'axis.ticks.line.stroke' },\n\n    colors: { scheme: 'nivo' } as unknown as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n\n    tooltip: PieTooltip,\n\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { useCallback, useMemo, useState } from 'react'\nimport { pie as d3Pie } from 'd3-shape'\nimport { useArcGenerator, computeArcBoundingBox } from '@nivo/arcs'\nimport {\n    degreesToRadians,\n    radiansToDegrees,\n    useValueFormatter,\n    usePropertyAccessor,\n} from '@nivo/core'\nimport { OrdinalColorScaleConfig, useOrdinalColorScale } from '@nivo/colors'\nimport { defaultProps } from './props'\nimport { CompletePieSvgProps, ComputedDatum, DatumId, PieArc, PieCustomLayerProps } from './types'\n\ninterface MayHaveLabel {\n    label?: string | number\n}\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    hidden: false,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius,\n    padAngle,\n    sortByValue,\n    activeId,\n    activeInnerRadiusOffset,\n    activeOuterRadiusOffset,\n    hiddenIds,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    // in degrees\n    startAngle: number\n    // in degrees\n    endAngle: number\n    // in pixels\n    innerRadius: number\n    // in pixels\n    outerRadius: number\n    padAngle: number\n    sortByValue: boolean\n    activeId: null | DatumId\n    activeInnerRadiusOffset: number\n    activeOuterRadiusOffset: number\n    hiddenIds: DatumId[]\n}): {\n    dataWithArc: Omit<ComputedDatum<RawDatum>, 'fill'>[]\n    legendData: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n} => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n            .padAngle(degreesToRadians(padAngle))\n\n        if (!sortByValue) {\n            innerPie.sortValues(null)\n        }\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    return useMemo(() => {\n        const hiddenData = data.filter(item => !hiddenIds.includes(item.id))\n        const dataWithArc = pie(hiddenData).map(\n            (\n                arc: Omit<\n                    PieArc,\n                    'angle' | 'angleDeg' | 'innerRadius' | 'outerRadius' | 'thickness'\n                > & {\n                    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                }\n            ) => {\n                const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                return {\n                    ...arc.data,\n                    arc: {\n                        index: arc.index,\n                        startAngle: arc.startAngle,\n                        endAngle: arc.endAngle,\n                        innerRadius:\n                            activeId === arc.data.id\n                                ? innerRadius - activeInnerRadiusOffset\n                                : innerRadius,\n                        outerRadius:\n                            activeId === arc.data.id\n                                ? outerRadius + activeOuterRadiusOffset\n                                : outerRadius,\n                        thickness: outerRadius - innerRadius,\n                        padAngle: arc.padAngle,\n                        angle,\n                        angleDeg: radiansToDegrees(angle),\n                    },\n                }\n            }\n        )\n        const legendData = data.map(item => ({ ...item, hidden: hiddenIds.includes(item.id) }))\n\n        return { dataWithArc, legendData }\n    }, [\n        pie,\n        data,\n        hiddenIds,\n        activeId,\n        innerRadius,\n        activeInnerRadiusOffset,\n        outerRadius,\n        activeOuterRadiusOffset,\n    ])\n}\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    Partial<CompletePieSvgProps<RawDatum>>,\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const [activeId, setActiveId] = useState<DatumId | null>(null)\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius: radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({ cornerRadius, padAngle: degreesToRadians(padAngle) })\n\n    return { ...pieArcs, arcGenerator, setActiveId, toggleSerie }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n}) => {\n    const [activeId, setActiveId] = useState<string | number | null>(null)\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius])\n\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius: computedProps.innerRadius,\n        outerRadius: computedProps.radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({\n        cornerRadius,\n        padAngle: degreesToRadians(padAngle),\n    })\n\n    return {\n        arcGenerator,\n        setActiveId,\n        toggleSerie,\n        ...pieArcs,\n        ...computedProps,\n    }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: PieCustomLayerProps<RawDatum>): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import { positionFromAngle, degreesToRadians } from '@nivo/core'\n\n/**\n * Computes the bounding box for a circle arc.\n *\n * Assumptions:\n *   - Anywhere the arc intersects an axis will be a max or a min.\n *   - If the arc doesn't intersect an axis, then the center\n *     will be one corner of the bounding rectangle,\n *     and this is the only case when it will be.\n *   - The only other possible extreme points of the sector to consider\n *     are the endpoints of the radii.\n *\n * This script was built within the help of this answer on stackoverflow:\n *   https://stackoverflow.com/questions/1336663/2d-bounding-box-of-a-sector\n */\nexport const computeArcBoundingBox = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    // in degrees\n    startAngle: number,\n    // in degrees\n    endAngle: number,\n    includeCenter = true\n) => {\n    let points: [number, number][] = []\n\n    const p0 = positionFromAngle(degreesToRadians(startAngle), radius)\n    points.push([p0.x, p0.y])\n\n    const p1 = positionFromAngle(degreesToRadians(endAngle), radius)\n    points.push([p1.x, p1.y])\n\n    for (\n        let angle = Math.round(Math.min(startAngle, endAngle));\n        angle <= Math.round(Math.max(startAngle, endAngle));\n        angle++\n    ) {\n        if (angle % 90 === 0) {\n            const p = positionFromAngle(degreesToRadians(angle), radius)\n            points.push([p.x, p.y])\n        }\n    }\n\n    points = points.map(([x, y]) => [centerX + x, centerY + y])\n    if (includeCenter) {\n        points.push([centerX, centerY])\n    }\n\n    const xs = points.map(([x]) => x)\n    const ys = points.map(([, y]) => y)\n\n    const x0 = Math.min(...xs)\n    const x1 = Math.max(...xs)\n\n    const y0 = Math.min(...ys)\n    const y1 = Math.max(...ys)\n\n    return {\n        points,\n        x: x0,\n        y: y0,\n        width: x1 - x0,\n        height: y1 - y0,\n    }\n}\n","import { createElement, useMemo } from 'react'\nimport * as React from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: CompletePieSvgProps<RawDatum>['borderColor']\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    onClick?: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter?: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove?: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave?: CompletePieSvgProps<RawDatum>['onMouseLeave']\n    setActiveId: (id: null | string | number) => void\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    transitionMode: CompletePieSvgProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    setActiveId,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            setActiveId(datum.id)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter, tooltip])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, onMouseMove, tooltip])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveId(null)\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveId, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import { ReactNode, Fragment, createElement } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { ArcLabelsLayer, ArcLinkLabelsLayer } from '@nivo/arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport PieLegends from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId } from './types'\nimport { defaultProps } from './props'\nimport { Arcs } from './Arcs'\n\nconst InnerPie = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsComponent,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    arcLinkLabelComponent,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n\n    transitionMode = defaultProps.transitionMode,\n\n    legends = defaultProps.legends,\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        legendData,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n        toggleSerie,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        arcLinkLabels: null,\n        arcs: null,\n        arcLabels: null,\n        legends: null,\n    }\n\n    if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n        layerById.arcLinkLabels = (\n            <ArcLinkLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLinkLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLinkLabel}\n                skipAngle={arcLinkLabelsSkipAngle}\n                offset={arcLinkLabelsOffset}\n                diagonalLength={arcLinkLabelsDiagonalLength}\n                straightLength={arcLinkLabelsStraightLength}\n                strokeWidth={arcLinkLabelsThickness}\n                textOffset={arcLinkLabelsTextOffset}\n                textColor={arcLinkLabelsTextColor}\n                linkColor={arcLinkLabelsColor}\n                component={arcLinkLabelComponent}\n            />\n        )\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                setActiveId={setActiveId}\n                tooltip={tooltip}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                data={legendData}\n                legends={legends}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Pie = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerPie<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { Pie } from './Pie'\nimport { PieSvgProps } from './types'\n\nexport const ResponsivePie = <RawDatum,>(\n    props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Pie<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n"],"names":["arcInnerRadius","d","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","x0","y0","x1","y1","r1","rc","cw","x01","y01","lo","sqrt","ox","oy","x11","y11","x10","y10","x00","y00","dx","dy","d2","r","D","max","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","cornerRadius","constant","padRadius","context","arc","buffer","r0","apply","this","arguments","a0","halfPi","a1","da","abs","path","epsilon","tau","moveTo","cos","sin","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","min","rc0","rc1","p0","asin","p1","oc","pi","x2","y2","x3","y3","x32","y32","t","intersect","ax","ay","bx","by","kc","acos","lc","atan2","lineTo","closePath","centroid","a","_","length","k","pointerEvents","C","n","e","label","style","i","p","transform","opacity","progress","children","textAnchor","dominantBaseline","M","labels","text","fill","textColor","b","Math","PI","L","filter","E","enter","update","leave","middleAngle","centerRadius","pushIn","pushOut","I","v","T","l","o","j","x","y","B","center","data","transitionMode","u","radiusOffset","skipAngle","s","f","component","c","g","h","R","m","animate","config","transition","keys","id","initial","from","immediate","interpolate","W","A","key","datum","G","stroke","linkColor","strokeWidth","thickness","textPosition","side","points","H","J","K","q","N","U","offset","diagonalLength","straightLength","textOffset","getLinkColor","getTextColor","interpolateLink","interpolateTextAnchor","interpolateTextPosition","Q","tt","onClick","onMouseEnter","onMouseMove","onMouseLeave","color","borderColor","borderWidth","nt","rt","arcGenerator","et","lt","NaN","X","width","height","legends","toggleSerie","S","map","containerWidth","containerHeight","Y","value","sortByValue","layers","fit","activeInnerRadiusOffset","activeOuterRadiusOffset","modifiers","enableArcLabels","arcLabel","arcLabelsSkipAngle","arcLabelsRadiusOffset","arcLabelsTextColor","theme","enableArcLinkLabels","arcLinkLabel","arcLinkLabelsSkipAngle","arcLinkLabelsOffset","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsThickness","arcLinkLabelsTextOffset","arcLinkLabelsTextColor","arcLinkLabelsColor","colors","scheme","defs","isInteractive","motionConfig","tooltip","formattedValue","enableChip","role","pixelRatio","window","devicePixelRatio","P","valueFormat","V","hidden","activeId","hiddenIds","identity","sortValues","descending","sort","pie","sum","index","Array","arcs","pa","includes","dataWithArc","angle","angleDeg","legendData","O","w","push","round","F","box","ratio","centerX","centerY","radius","debug","indexOf","concat","setActiveId","showTooltipFromEvent","hideTooltip","margin","z","Z","$","ee","ie","te","ne","re","ae","oe","arcLabelsComponent","de","le","se","ce","ue","ve","fe","ge","Le","he","be","pe","ke","Ae","Re","me","Oe","Ce","Ie","xe","Me","arcLinkLabelComponent","ye","we","We","Se","Te","Ve","Be","Ge","Ee","De","Fe","He","Xe","Ye","je","Pe","qe","ze","Je","Ke","outerWidth","Ne","outerHeight","Qe","Ue","innerWidth","Ze","innerHeight","$e","_e","ei","ii","ti","ni","ri","ai","oi","di","li","si","ci","arcLinkLabels","arcLabels","ui","renderWrapper","tauEpsilon","Path","_x0","_y0","_x1","_y1","prototype","constructor","quadraticCurveTo","bezierCurveTo","arcTo","x21","y21","l01_2","Error","x20","y20","l21_2","l20_2","l21","l01","tan","t01","t21","ccw","rect","toString","pointX","pointY","defined","curve","curveLinear","output","line","defined0","lineStart","lineEnd","point"],"sourceRoot":""}