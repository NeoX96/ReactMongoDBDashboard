{"version":3,"file":"static/js/949.ce3db017.chunk.js","mappings":"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","sources":["../node_modules/d3-scale/src/band.js","../node_modules/d3-scale/node_modules/d3-array/src/range.js","../node_modules/d3-scale/node_modules/d3-time/src/duration.js","../node_modules/d3-scale/node_modules/d3-time/src/interval.js","../node_modules/d3-scale/node_modules/d3-time/src/millisecond.js","../node_modules/d3-scale/node_modules/d3-time/src/second.js","../node_modules/d3-scale/node_modules/d3-time/src/minute.js","../node_modules/d3-scale/node_modules/d3-time/src/hour.js","../node_modules/d3-scale/node_modules/d3-time/src/day.js","../node_modules/d3-scale/node_modules/d3-time/src/week.js","../node_modules/d3-scale/node_modules/d3-time/src/month.js","../node_modules/d3-scale/node_modules/d3-time/src/year.js","../node_modules/d3-scale/node_modules/d3-time/src/utcMinute.js","../node_modules/d3-scale/node_modules/d3-time/src/utcHour.js","../node_modules/d3-scale/node_modules/d3-time/src/utcDay.js","../node_modules/d3-scale/node_modules/d3-time/src/utcWeek.js","../node_modules/d3-scale/node_modules/d3-time/src/utcMonth.js","../node_modules/d3-scale/node_modules/d3-time/src/utcYear.js","../node_modules/d3-scale/node_modules/d3-time/src/ticks.js","../node_modules/d3-scale/src/nice.js","../node_modules/d3-scale/src/time.js","../node_modules/d3-scale/src/log.js","../node_modules/d3-scale/src/symlog.js","../node_modules/d3-time/src/millisecond.js","../node_modules/d3-time/src/second.js","../node_modules/d3-time/src/minute.js","../node_modules/d3-time/src/utcMinute.js","../node_modules/d3-time/src/hour.js","../node_modules/d3-time/src/utcHour.js","../node_modules/d3-time/src/month.js","../node_modules/d3-time/src/utcMonth.js","../node_modules/@nivo/scales/src/timeHelpers.ts","../node_modules/@nivo/scales/src/linearScale.ts","../node_modules/@nivo/scales/src/pointScale.ts","../node_modules/@nivo/scales/src/bandScale.ts","../node_modules/@nivo/scales/src/timeScale.ts","../node_modules/d3-scale/src/utcTime.js","../node_modules/@nivo/scales/src/logScale.ts","../node_modules/@nivo/scales/src/symlogScale.ts","../node_modules/@nivo/scales/src/compute.ts","../node_modules/@nivo/scales/src/ticks.ts","../node_modules/@nivo/axes/src/compute.ts","../node_modules/@nivo/axes/src/components/AxisTick.tsx","../node_modules/@nivo/axes/src/components/Axis.tsx","../node_modules/@nivo/axes/src/props.ts","../node_modules/@nivo/axes/src/components/Axes.tsx","../node_modules/@nivo/axes/src/components/GridLine.tsx","../node_modules/@nivo/axes/src/components/GridLines.tsx","../node_modules/@nivo/axes/src/components/Grid.tsx","../node_modules/@nivo/axes/src/canvas.ts","../node_modules/d3-shape/src/array.js","../node_modules/d3-shape/src/stack.js","../node_modules/@nivo/bar/src/BarAnnotations.tsx","../node_modules/@nivo/bar/src/BarLegends.tsx","../node_modules/@nivo/bar/src/BarItem.tsx","../node_modules/@nivo/bar/src/props.ts","../node_modules/@nivo/bar/src/BarTooltip.tsx","../node_modules/@nivo/bar/src/compute/common.ts","../node_modules/@nivo/bar/src/compute/grouped.ts","../node_modules/@nivo/bar/src/compute/stacked.ts","../node_modules/@nivo/bar/src/compute/legends.ts","../node_modules/@nivo/bar/src/hooks.ts","../node_modules/@nivo/bar/src/Bar.tsx","../node_modules/@nivo/bar/src/BarCanvas.tsx","../node_modules/@nivo/bar/src/ResponsiveBar.tsx","../node_modules/@nivo/bar/src/ResponsiveBarCanvas.tsx","../node_modules/lodash/_baseIsDate.js","../node_modules/lodash/_baseMap.js","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_baseUniq.js","../node_modules/lodash/_compareAscending.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_createSet.js","../node_modules/lodash/isDate.js","../node_modules/lodash/noop.js","../node_modules/lodash/sortBy.js","../node_modules/lodash/uniq.js","../node_modules/lodash/uniqBy.js"],"sourcesContent":["import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","export const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationMonth = durationDay * 30;\nexport const durationYear = durationDay * 365;\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval.js\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","import interval from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nvar day = interval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval.js\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval.js\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval.js\";\nimport {durationMinute} from \"./duration.js\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval.js\";\nimport {durationHour} from \"./duration.js\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval.js\";\nimport {durationDay} from \"./duration.js\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval.js\";\nimport {durationWeek} from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval.js\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval.js\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {bisector, tickStep} from \"d3-array\";\nimport {durationDay, durationHour, durationMinute, durationMonth, durationSecond, durationWeek, durationYear} from \"./duration.js\";\nimport millisecond from \"./millisecond.js\";\nimport second from \"./second.js\";\nimport minute from \"./minute.js\";\nimport hour from \"./hour.js\";\nimport day from \"./day.js\";\nimport {sunday as week} from \"./week.js\";\nimport month from \"./month.js\";\nimport year from \"./year.js\";\nimport utcMinute from \"./utcMinute.js\";\nimport utcHour from \"./utcHour.js\";\nimport utcDay from \"./utcDay.js\";\nimport {utcSunday as utcWeek} from \"./utcWeek.js\";\nimport utcMonth from \"./utcMonth.js\";\nimport utcYear from \"./utcYear.js\";\n\nfunction ticker(year, month, week, day, hour, minute) {\n\n  const tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function ticks(start, stop, count) {\n    const reverse = stop < start;\n    if (reverse) [start, stop] = [stop, start];\n    const interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n    return reverse ? ticks.reverse() : ticks;\n  }\n\n  function tickInterval(start, stop, count) {\n    const target = Math.abs(stop - start) / count;\n    const i = bisector(([,, step]) => step).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(tickStep(start, stop, count), 1));\n    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n    return t.every(step);\n  }\n\n  return [ticks, tickInterval];\n}\n\nconst [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute);\nconst [timeTicks, timeTickInterval] = ticker(year, month, week, day, hour, minute);\n\nexport {utcTicks, utcTickInterval, timeTicks, timeTickInterval};\n","export default function nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeTicks, timeTickInterval} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport nice from \"./nice.js\";\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {\n  var scale = continuous(),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval) {\n    var d = domain();\n    if (!interval || typeof interval.range !== \"function\") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);\n    return interval ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));\n  };\n\n  return scale;\n}\n\nexport default function time() {\n  return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import interval from \"./interval.js\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","import interval from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval.js\";\nimport {durationMinute} from \"./duration.js\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval.js\";\nimport {durationHour} from \"./duration.js\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval.js\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval.js\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import { timeParse, utcParse } from 'd3-time-format'\n\nexport const timePrecisions = [\n    'millisecond',\n    'second',\n    'minute',\n    'hour',\n    'day',\n    'month',\n    'year',\n] as const\n\nexport type TIME_PRECISION = typeof timePrecisions[number]\n\nexport const precisionCutOffs: ((date: Date) => void)[] = [\n    date => date.setMilliseconds(0),\n    date => date.setSeconds(0),\n    date => date.setMinutes(0),\n    date => date.setHours(0),\n    date => date.setDate(1),\n    date => date.setMonth(0),\n]\n\nexport const precisionCutOffsByType: Record<TIME_PRECISION, ((date: Date) => void)[]> = {\n    millisecond: [],\n    second: precisionCutOffs.slice(0, 1),\n    minute: precisionCutOffs.slice(0, 2),\n    hour: precisionCutOffs.slice(0, 3),\n    day: precisionCutOffs.slice(0, 4),\n    month: precisionCutOffs.slice(0, 5),\n    year: precisionCutOffs.slice(0, 6),\n}\n\nexport const createPrecisionMethod = (precision: TIME_PRECISION) => (date: Date) => {\n    precisionCutOffsByType[precision].forEach(cutOff => {\n        cutOff(date)\n    })\n\n    return date\n}\n\nexport const createDateNormalizer = ({\n    format = 'native',\n    precision = 'millisecond',\n    useUTC = true,\n}: {\n    format?: 'native' | string\n    precision?: TIME_PRECISION\n    useUTC?: boolean\n}) => {\n    const precisionFn = createPrecisionMethod(precision)\n\n    return (value: Date | string | undefined) => {\n        if (value === undefined) {\n            return value\n        }\n\n        if (format === 'native' || value instanceof Date) {\n            return precisionFn(value as Date)\n        }\n\n        const parseTime = useUTC ? utcParse(format) : timeParse(format)\n        return precisionFn(parseTime(value as string) as Date)\n    }\n}\n","import { NumberValue, scaleLinear, ScaleLinear as D3ScaleLinear } from 'd3-scale'\nimport { ScaleLinearSpec, ScaleLinear, ComputedSerieAxis, ScaleAxis } from './types'\n\nexport const createLinearScale = <Output extends NumberValue>(\n    {\n        min = 0,\n        max = 'auto',\n        stacked = false,\n        reverse = false,\n        clamp = false,\n        nice = false,\n    }: ScaleLinearSpec,\n    data: ComputedSerieAxis<Output>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    let minValue: NumberValue\n    if (min === 'auto') {\n        minValue = stacked === true ? data.minStacked ?? 0 : data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: NumberValue\n    if (max === 'auto') {\n        maxValue = stacked === true ? data.maxStacked ?? 0 : data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleLinear<number, Output>()\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .domain(reverse ? [maxValue, minValue] : [minValue, maxValue])\n        .clamp(clamp)\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'number') scale.nice(nice)\n\n    return castLinearScale<number, Output>(scale, stacked)\n}\n\nexport const castLinearScale = <Range, Output>(\n    scale: D3ScaleLinear<Range, Output>,\n    stacked = false\n) => {\n    const typedScale = scale as unknown as ScaleLinear<number>\n    typedScale.type = 'linear'\n    typedScale.stacked = stacked\n\n    return typedScale\n}\n","import { scalePoint, ScalePoint as D3ScalePoint } from 'd3-scale'\nimport { ComputedSerieAxis, ScalePoint, ScalePointSpec, StringValue } from './types'\n\nexport const createPointScale = <Input extends StringValue>(\n    _spec: ScalePointSpec,\n    data: ComputedSerieAxis<Input>,\n    size: number\n) => {\n    const scale = scalePoint<Input>().range([0, size]).domain(data.all)\n\n    const typedScale = scale as ScalePoint<Input>\n    typedScale.type = 'point'\n\n    return typedScale\n}\n\nexport const castPointScale = <Input extends StringValue>(scale: D3ScalePoint<Input>) => {\n    const typedScale = scale as ScalePoint<Input>\n    typedScale.type = 'point'\n\n    return typedScale\n}\n","import { scaleBand, ScaleBand as D3ScaleBand } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleBand, ScaleBandSpec, StringValue, ScaleAxis } from './types'\n\nexport const createBandScale = <Input extends StringValue>(\n    { round = true }: ScaleBandSpec,\n    data: ComputedSerieAxis<Input>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    const scale = scaleBand<Input>()\n        .range(axis === 'x' ? [0, size] : [size, 0])\n        .domain(data.all)\n        .round(round)\n\n    return castBandScale<Input>(scale)\n}\n\nexport const castBandScale = <Input>(scale: D3ScaleBand<Input>) => {\n    const typedScale = scale as ScaleBand<Input>\n    typedScale.type = 'band'\n\n    return typedScale\n}\n","import { NumberValue, scaleTime, scaleUtc } from 'd3-scale'\nimport { createDateNormalizer } from './timeHelpers'\nimport { ComputedSerieAxis, ScaleTime, ScaleTimeSpec } from './types'\n\nexport const createTimeScale = <Input extends Date | NumberValue>(\n    {\n        format = 'native',\n        precision = 'millisecond',\n        min = 'auto',\n        max = 'auto',\n        useUTC = true,\n        nice = false,\n    }: ScaleTimeSpec,\n    data: ComputedSerieAxis<string | Date>,\n    size: number\n) => {\n    const normalize = createDateNormalizer({ format, precision, useUTC })\n\n    let minValue: Date | undefined\n    if (min === 'auto') {\n        minValue = normalize(data.min)\n    } else if (format !== 'native') {\n        minValue = normalize(min)\n    } else {\n        minValue = min as Date\n    }\n\n    let maxValue: Date | undefined\n    if (max === 'auto') {\n        maxValue = normalize(data.max)\n    } else if (format !== 'native') {\n        maxValue = normalize(max)\n    } else {\n        maxValue = max as Date\n    }\n\n    const scale = useUTC ? scaleUtc() : scaleTime()\n\n    scale.range([0, size])\n\n    if (minValue && maxValue) scale.domain([minValue, maxValue])\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'object' || typeof nice === 'number') scale.nice(nice)\n\n    const typedScale = scale as unknown as ScaleTime<Input>\n\n    typedScale.type = 'time'\n    typedScale.useUTC = useUTC\n\n    return typedScale\n}\n","import {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcTicks, utcTickInterval} from \"d3-time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {calendar} from \"./time.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function utcTime() {\n  return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n","import { scaleLog } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleAxis, ScaleLog, ScaleLogSpec } from './types'\n\nexport const createLogScale = (\n    { base = 10, min = 'auto', max = 'auto' }: ScaleLogSpec,\n    data: ComputedSerieAxis<number>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    const hasZero = data.all.some(v => v === 0)\n    if (hasZero) {\n        throw new Error(`a log scale domain must not include or cross zero`)\n    }\n\n    let sign: number\n    let hasMixedSign = false\n    data.all\n        .filter(v => v != null)\n        .forEach(v => {\n            if (hasMixedSign) return\n            if (sign === undefined) {\n                sign = Math.sign(v)\n            } else if (Math.sign(v) !== sign) {\n                hasMixedSign = true\n            }\n        })\n\n    if (hasMixedSign) {\n        throw new Error(`a log scale domain must be strictly-positive or strictly-negative`)\n    }\n\n    let minValue: number\n    if (min === 'auto') {\n        minValue = data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: number\n    if (max === 'auto') {\n        maxValue = data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleLog<number, number>()\n        .domain([minValue, maxValue])\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .base(base)\n        .nice()\n\n    const typedScale = scale as ScaleLog\n    typedScale.type = 'log'\n\n    return typedScale\n}\n","import { scaleSymlog } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleAxis, ScaleSymlog, ScaleSymlogSpec } from './types'\n\nexport const createSymlogScale = (\n    { constant = 1, min = 'auto', max = 'auto', reverse = false }: ScaleSymlogSpec,\n    data: ComputedSerieAxis<number>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    let minValue: number\n    if (min === 'auto') {\n        minValue = data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: number\n    if (max === 'auto') {\n        maxValue = data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleSymlog<number, number>()\n        .constant(constant)\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .nice()\n\n    if (reverse === true) scale.domain([maxValue, minValue])\n    else scale.domain([minValue, maxValue])\n\n    const typedScale = scale as ScaleSymlog\n    typedScale.type = 'symlog'\n\n    return typedScale\n}\n","import uniq from 'lodash/uniq'\nimport uniqBy from 'lodash/uniqBy'\nimport sortBy from 'lodash/sortBy'\nimport last from 'lodash/last'\nimport isDate from 'lodash/isDate'\nimport { createDateNormalizer } from './timeHelpers'\nimport { ScaleAxis, ScaleSpec, ScaleValue, SerieAxis, ComputedSerieAxis } from './types'\nimport { createLinearScale } from './linearScale'\nimport { createPointScale } from './pointScale'\nimport { createBandScale } from './bandScale'\nimport { createTimeScale } from './timeScale'\nimport { createLogScale } from './logScale'\nimport { createSymlogScale } from './symlogScale'\n\ntype XY = ReturnType<typeof generateSeriesXY>\n\ntype StackedXY = {\n    [K in keyof XY]: XY[K] & {\n        maxStacked: number\n        minStacked: number\n    }\n}\n\ninterface SerieDatum {\n    x: number | string | Date\n    // only numbers can be stacked\n    xStacked?: number | null\n    y: number | string | Date\n    // only numbers can be stacked\n    yStacked?: number | null\n}\n\ntype Serie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: D[]\n}\n\ntype NestedSerie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: {\n        data: D\n    }[]\n}\n\nexport type ComputedSerie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: {\n        data: D\n        position: {\n            x: number | null\n            y: number | null\n        }\n    }[]\n}\n\ntype Compare = <T>(a: T, b: T) => boolean\n\nexport const getOtherAxis = (axis: ScaleAxis): ScaleAxis => (axis === 'x' ? 'y' : 'x')\n\nexport const compareValues = (a: string | number, b: string | number) => a === b\nexport const compareDateValues = (a: Date, b: Date) => a.getTime() === b.getTime()\n\nexport function computeScale<Input extends ScaleValue>(\n    spec: ScaleSpec,\n    data: ComputedSerieAxis<any>,\n    size: number,\n    axis: ScaleAxis\n) {\n    switch (spec.type) {\n        case 'linear':\n            return createLinearScale(spec, data, size, axis)\n        case 'point':\n            return createPointScale<Input>(spec, data, size)\n        case 'band':\n            return createBandScale<Input>(spec, data, size, axis)\n        case 'time':\n            return createTimeScale(spec, data, size)\n        case 'log':\n            return createLogScale(spec, data, size, axis)\n        case 'symlog':\n            return createSymlogScale(spec, data, size, axis)\n        default:\n            throw new Error('invalid scale spec')\n    }\n}\n\n/**\n * Convert serie data to have the original data stored in a nested prop.\n *\n * We do this in order to avoid conflicts between raw & computed properties.\n * <- { data: { x: 1, y: 3 }[] }\n * -> { data: { data: { x: 1, y: 3 } }[] }\n */\nconst nestSerieData = <S = never, D extends SerieDatum = SerieDatum>(\n    serie: Serie<S, D>\n): NestedSerie<S, D> => ({\n    ...serie,\n    data: serie.data.map(d => ({ data: { ...d } })),\n})\n\nconst getDatumAxisPosition = <D extends SerieDatum = SerieDatum>(\n    datum: { data: D },\n    axis: ScaleAxis,\n    scale: any\n): number | null => {\n    if ('stacked' in scale && scale.stacked) {\n        const stackedValue = datum.data[axis === 'x' ? 'xStacked' : 'yStacked']\n        if (stackedValue === null || stackedValue === undefined) {\n            return null\n        }\n\n        return scale(stackedValue)\n    }\n\n    return scale(datum.data[axis]) ?? null\n}\n\n/**\n * Compute x/y d3 scales from an array of data series, and scale specifications.\n *\n * We use generics as it's not uncommon to have extra properties such as an id\n * added to the series, or extra props on data, in such case, you should override\n * the default types.\n */\nexport const computeXYScalesForSeries = <S = never, D extends SerieDatum = SerieDatum>(\n    series: Serie<S, D>[],\n    xScaleSpec: ScaleSpec,\n    yScaleSpec: ScaleSpec,\n    width: number,\n    height: number\n) => {\n    // first nest series to avoid property conflicts\n    const nestedSeries = series.map(serie => nestSerieData<S, D>(serie))\n\n    // then compute data for each axis: all, min, max values\n    const xy = generateSeriesXY<S, D>(nestedSeries, xScaleSpec, yScaleSpec)\n\n    // stack x values depending on xScale\n    if ('stacked' in xScaleSpec && xScaleSpec.stacked === true) {\n        stackX<S, D>(xy as StackedXY, nestedSeries)\n    }\n\n    // stack y values depending on yScale\n    if ('stacked' in yScaleSpec && yScaleSpec.stacked === true) {\n        stackY<S, D>(xy as StackedXY, nestedSeries)\n    }\n\n    // computes scales\n    const xScale = computeScale<D['x']>(xScaleSpec, xy.x, width, 'x')\n    const yScale = computeScale<D['y']>(yScaleSpec, xy.y, height, 'y')\n\n    // assign position to each datum in every scale\n    const computedSeries: ComputedSerie<S, D>[] = nestedSeries.map(serie => ({\n        ...serie,\n        data: serie.data.map(datum => ({\n            ...datum,\n            position: {\n                x: getDatumAxisPosition(datum, 'x', xScale),\n                y: getDatumAxisPosition(datum, 'y', yScale),\n            },\n        })),\n    }))\n\n    return {\n        ...xy,\n        series: computedSeries,\n        xScale,\n        yScale,\n    }\n}\n\nexport const generateSeriesXY = <S = never, D extends SerieDatum = SerieDatum>(\n    series: NestedSerie<S, D>[],\n    xScaleSpec: ScaleSpec,\n    yScaleSpec: ScaleSpec\n) => ({\n    x: generateSeriesAxis<'x', D['x']>(series, 'x', xScaleSpec),\n    y: generateSeriesAxis<'y', D['y']>(series, 'y', yScaleSpec),\n})\n\n/**\n * Normalize data according to scale type, (time => Date, linear => Number)\n * compute sorted unique values and min/max.\n */\nexport const generateSeriesAxis = <Axis extends ScaleAxis, Value extends ScaleValue>(\n    series: SerieAxis<Axis, Value>,\n    axis: Axis,\n    scaleSpec: ScaleSpec,\n    {\n        getValue = d => d.data[axis],\n        setValue = (d, v) => {\n            d.data[axis] = v\n        },\n    }: {\n        getValue?: (d: { data: Record<Axis, Value | null> }) => Value | null\n        setValue?: (d: { data: Record<Axis, Value | null> }, v: Value) => void\n    } = {}\n) => {\n    if (scaleSpec.type === 'linear') {\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                const value = getValue(d)\n\n                if (value) {\n                    setValue(d, parseFloat(String(value)) as unknown as Value)\n                }\n            })\n        })\n    } else if (scaleSpec.type === 'time' && scaleSpec.format !== 'native') {\n        // `native` means we already have Date instances,\n        // otherwise we have to convert the values to Date.\n        const parseTime = createDateNormalizer(scaleSpec)\n\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                const value = getValue(d)\n\n                if (value) {\n                    setValue(d, parseTime(value as Date) as unknown as Value)\n                }\n            })\n        })\n    }\n\n    const values: unknown[] = []\n\n    series.forEach(serie => {\n        serie.data.forEach(d => {\n            values.push(getValue(d))\n        })\n    })\n\n    switch (scaleSpec.type) {\n        case 'linear': {\n            const all = sortBy(\n                // filer null values to deal with holes in linechart\n                uniq(values as number[]).filter(v => v !== null),\n                v => v\n            )\n\n            return { all, min: Math.min(...all), max: Math.max(...all) }\n        }\n        case 'time': {\n            const all = uniqBy(values as Date[], v => v.getTime())\n                .slice(0)\n                .sort((a, b) => b.getTime() - a.getTime())\n                .reverse()\n\n            return { all, min: all[0], max: last(all) }\n        }\n        default: {\n            const all = uniq(values)\n\n            return { all, min: all[0], max: last(all) }\n        }\n    }\n}\n\nexport const stackAxis = <S = never, D extends SerieDatum = SerieDatum>(\n    axis: ScaleAxis,\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => {\n    const otherAxis = getOtherAxis(axis)\n    const all: number[] = []\n\n    xy[otherAxis].all.forEach(v => {\n        const compare = (isDate(v) ? compareDateValues : compareValues) as Compare\n        const stack: Array<number | null> = []\n\n        series.forEach(serie => {\n            const datum = serie.data.find(d => compare(d.data[otherAxis], v))\n            let value = null\n            let stackValue = null\n\n            if (datum !== undefined) {\n                // stacked values only support numbers\n                value = datum.data[axis] as number\n                if (value !== null) {\n                    const head = last(stack)\n                    if (head === undefined) {\n                        stackValue = value\n                    } else if (head !== null) {\n                        stackValue = head + value\n                    }\n                }\n\n                datum.data[axis === 'x' ? 'xStacked' : 'yStacked'] = stackValue\n            }\n\n            stack.push(stackValue)\n\n            if (stackValue !== null) {\n                all.push(stackValue)\n            }\n        })\n    })\n\n    xy[axis].minStacked = Math.min(...all)\n    xy[axis].maxStacked = Math.max(...all)\n}\n\nconst stackX = <S = never, D extends SerieDatum = SerieDatum>(\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => stackAxis<S, D>('x', xy, series)\n\nconst stackY = <S = never, D extends SerieDatum = SerieDatum>(\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => stackAxis<S, D>('y', xy, series)\n","import {\n    CountableTimeInterval,\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n    timeInterval,\n} from 'd3-time'\nimport { ScaleValue, TicksSpec, AnyScale, ScaleWithBandwidth } from './types'\n\nexport const centerScale = <Value>(scale: ScaleWithBandwidth) => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return <T extends Value>(d: T) => (scale(d) ?? 0) + offset\n}\n\nconst timeDay = timeInterval(\n    date => date.setHours(0, 0, 0, 0),\n    (date, step) => date.setDate(date.getDate() + step),\n    (start, end) => (end.getTime() - start.getTime()) / 864e5,\n    date => Math.floor(date.getTime() / 864e5)\n)\n\nconst utcDay = timeInterval(\n    date => date.setUTCHours(0, 0, 0, 0),\n    (date, step) => date.setUTCDate(date.getUTCDate() + step),\n    (start, end) => (end.getTime() - start.getTime()) / 864e5,\n    date => Math.floor(date.getTime() / 864e5)\n)\n\nconst timeByType: Record<string, [CountableTimeInterval, CountableTimeInterval]> = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = (value: unknown): value is number =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = <Value extends ScaleValue>(\n    scale: AnyScale,\n    spec?: TicksSpec<Value>\n) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    if (typeof spec === 'string' && 'useUTC' in scale) {\n        // time interval\n        const matches = spec.match(timeIntervalRegexp)\n\n        if (matches) {\n            const [, amount, type] = matches\n            // UTC is used as it's more predictable\n            // however local time could be used too\n            // let's see how it fits users' requirements\n            const timeType = timeByType[type][scale.useUTC ? 1 : 0]\n\n            if (type === 'day') {\n                const [start, originalStop] = scale.domain()\n                const stop = new Date(originalStop)\n\n                // Set range to include last day in the domain since `interval.range` function is exclusive stop\n                stop.setDate(stop.getDate() + 1)\n\n                return timeType.every(Number(amount ?? 1))?.range(start, stop) ?? []\n            }\n\n            if (amount === undefined) {\n                return scale.ticks(timeType)\n            }\n\n            const interval = timeType.every(Number(amount))\n\n            if (interval) {\n                return scale.ticks(interval)\n            }\n        }\n\n        throw new Error(`Invalid tickValues: ${spec}`)\n    }\n\n    // continuous scales\n    if ('ticks' in scale) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map((value: Value) => ({\n        key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProps, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProps<X> | null\n        right?: CanvasAxisProps<Y> | null\n        bottom?: CanvasAxisProps<X> | null\n        left?: CanvasAxisProps<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProps<X> | undefined\n            : CanvasAxisProps<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","export var slice = Array.prototype.slice;\n","import {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport offsetNone from \"./offset/none.js\";\nimport orderNone from \"./order/none.js\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n","import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n    },\n\n    borderRadius,\n    borderWidth,\n\n    label,\n    shouldRenderLabel,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(\n        () => () => createElement(tooltip, { ...bar, ...data }),\n        [tooltip, bar, data]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n","import { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { ComputedDatum } from './types'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ScaleBandSpec, ScaleSpec } from '@nivo/scales'\n\nexport const defaultProps = {\n    indexBy: 'id',\n    keys: ['value'],\n\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    reverse: false,\n\n    minValue: 'auto' as const,\n    maxValue: 'auto' as const,\n\n    valueScale: { type: 'linear' } as ScaleSpec,\n    indexScale: { type: 'band', round: true } as ScaleBandSpec,\n\n    padding: 0.1,\n    innerPadding: 0,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { from: 'theme', theme: 'labels.text.fill' },\n\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: <RawDatum>(datum: ComputedDatum<RawDatum>) => `${datum.id} - ${datum.indexValue}`,\n\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: [],\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'markers', 'legends', 'annotations'],\n    barComponent: BarItem,\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n\nexport const canvasDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'legends', 'annotations'],\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (\n        computeScale(\n            indexScale,\n            { all: data.map(getIndex), min: 0, max: 0 },\n            size,\n            axis\n        ) as ScaleBand<string>\n    ).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: RawDatum[], keys: string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : (arr as unknown as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep(stackedData as unknown as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport { uniqBy } from 'lodash'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { usePropertyAccessor, useTheme, useValueFormatter, Margin } from '@nivo/core'\nimport {\n    DataProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n    BarLegendProps,\n} from './types'\nimport { defaultProps } from './props'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\n\nexport const useBar = <RawDatum extends BarDatum>({\n    indexBy = defaultProps.indexBy,\n    keys = defaultProps.keys,\n    label = defaultProps.label,\n    tooltipLabel = defaultProps.tooltipLabel,\n    valueFormat,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    borderColor = defaultProps.borderColor,\n    labelTextColor = defaultProps.labelTextColor,\n    groupMode = defaultProps.groupMode,\n    layout = defaultProps.layout,\n    reverse = defaultProps.reverse,\n    data,\n    minValue = defaultProps.minValue,\n    maxValue = defaultProps.maxValue,\n    margin,\n    width,\n    height,\n    padding = defaultProps.padding,\n    innerPadding = defaultProps.innerPadding,\n    valueScale = defaultProps.valueScale,\n    indexScale = defaultProps.indexScale,\n    initialHiddenIds = defaultProps.initialHiddenIds,\n    enableLabel = defaultProps.enableLabel,\n    labelSkipWidth = defaultProps.labelSkipWidth,\n    labelSkipHeight = defaultProps.labelSkipHeight,\n    legends = defaultProps.legends,\n    legendLabel,\n}: {\n    indexBy?: BarCommonProps<RawDatum>['indexBy']\n    label?: BarCommonProps<RawDatum>['label']\n    tooltipLabel?: BarCommonProps<RawDatum>['tooltipLabel']\n    valueFormat?: BarCommonProps<RawDatum>['valueFormat']\n    colors?: BarCommonProps<RawDatum>['colors']\n    colorBy?: BarCommonProps<RawDatum>['colorBy']\n    borderColor?: BarCommonProps<RawDatum>['borderColor']\n    labelTextColor?: BarCommonProps<RawDatum>['labelTextColor']\n    groupMode?: BarCommonProps<RawDatum>['groupMode']\n    layout?: BarCommonProps<RawDatum>['layout']\n    reverse?: BarCommonProps<RawDatum>['reverse']\n    data: DataProps<RawDatum>['data']\n    keys?: BarCommonProps<RawDatum>['keys']\n    minValue?: BarCommonProps<RawDatum>['minValue']\n    maxValue?: BarCommonProps<RawDatum>['maxValue']\n    margin: Margin\n    width: number\n    height: number\n    padding?: BarCommonProps<RawDatum>['padding']\n    innerPadding?: BarCommonProps<RawDatum>['innerPadding']\n    valueScale?: BarCommonProps<RawDatum>['valueScale']\n    indexScale?: BarCommonProps<RawDatum>['indexScale']\n    initialHiddenIds?: BarCommonProps<RawDatum>['initialHiddenIds']\n    enableLabel?: BarCommonProps<RawDatum>['enableLabel']\n    labelSkipWidth?: BarCommonProps<RawDatum>['labelSkipWidth']\n    labelSkipHeight?: BarCommonProps<RawDatum>['labelSkipHeight']\n    legends?: BarCommonProps<RawDatum>['legends']\n    legendLabel?: BarCommonProps<RawDatum>['legendLabel']\n}) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        borderColor,\n        theme\n    )\n    const getLabelColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        labelTextColor,\n        theme\n    )\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const { bars, xScale, yScale } = generateBars({\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width,\n        height,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n        margin,\n    })\n\n    const barsWithValue = useMemo(\n        () =>\n            bars\n                .filter(\n                    (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n                )\n                .map((bar, index) => ({\n                    ...bar,\n                    index,\n                })),\n        [bars]\n    )\n\n    const shouldRenderBarLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipWidth, labelSkipHeight]\n    )\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, bars]\n    )\n\n    const legendsWithData: [BarLegendProps, LegendData[]][] = useMemo(\n        () =>\n            legends.map(legend => {\n                const data = getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n\n                return [legend, data]\n            }),\n        [legends, legendData, bars, groupMode, layout, legendLabel, reverse]\n    )\n\n    return {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getIndex,\n        getLabel,\n        getTooltipLabel,\n        formatValue,\n        getColor,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        hiddenIds,\n        toggleSerie,\n        legendsWithData,\n    }\n}\n","import { Axes, Grid } from '@nivo/axes'\nimport { BarAnnotations } from './BarAnnotations'\nimport {\n    BarCustomLayerProps,\n    BarDatum,\n    BarLayer,\n    BarLayerId,\n    BarSvgProps,\n    ComputedBarDatumWithValue,\n} from './types'\nimport { BarLegends } from './BarLegends'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { svgDefaultProps } from './props'\nimport { useTransition } from '@react-spring/web'\nimport { useBar } from './hooks'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel = svgDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = svgDefaultProps.labelSkipWidth,\n    labelSkipHeight = svgDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    markers = svgDefaultProps.markers,\n\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n\n    initialHiddenIds,\n}: InnerBarProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n    })\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<RawDatum>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      labelX: 0,\n                      labelY: bar.height / 2,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    const layerContext: BarCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import {\n    BarCanvasCustomLayerProps,\n    BarCanvasLayer,\n    BarCanvasProps,\n    BarDatum,\n    ComputedBarDatum,\n} from './types'\nimport {\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useBar } from './hooks'\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = 'center'\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + width / 2, y + height / 2)\n        }\n    },\n\n    enableLabel = canvasDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = canvasDefaultProps.labelSkipWidth,\n    labelSkipHeight = canvasDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: BarCanvasCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            isFocusable: false,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: xScale,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: yScale,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale,\n                    yScale: yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar) as string,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        reverse,\n        shouldRenderBarLabel,\n        theme,\n        width,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas<RawDatum> {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n","import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: Omit<BarSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: Omit<BarCanvasProps<RawDatum>, 'height' | 'width'>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas\n                    width={width}\n                    height={height}\n                    {...(props as Omit<BarCanvasProps<BarDatum>, 'height' | 'width'>)}\n                    ref={ref}\n                />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n"],"names":["band","step","bandwidth","scale","ordinal","unknown","undefined","domain","ordinalRange","range","r0","r1","round","paddingInner","paddingOuter","align","rescale","n","length","reverse","start","stop","Math","max","floor","values","arguments","i","ceil","Array","sequence","map","_","_ref","_slicedToArray","rangeRound","_ref2","padding","min","copy","initRange","pointish","point","apply","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","t0","Date","t1","newInterval","floori","offseti","count","field","interval","date","d0","d1","offset","previous","push","filter","test","setTime","end","every","isFinite","d","millisecond","k","second","getMilliseconds","getUTCSeconds","minute","getSeconds","getMinutes","hour","getHours","day","setHours","setDate","getDate","getTimezoneOffset","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month","setMonth","getMonth","getFullYear","year","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","ticker","week","tickIntervals","tickInterval","target","abs","bisector","right","tickStep","_tickIntervals","t","ticks","_ticker","utcWeek","_ticker2","utcTicks","utcTickInterval","_ticker3","_ticker4","timeTicks","timeTickInterval","nice","i0","i1","slice","x0","x1","number","calendar","format","continuous","invert","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickFormat","y","from","specifier","transformLog","x","log","transformExp","exp","transformLogn","transformExpn","pow10","reflect","f","loggish","transform","logs","pows","base","E","log10","log2","logp","pow","powp","r","u","v","p","j","z","Infinity","transformer","transformSymlog","c","sign","log1p","transformSymexp","expm1","symlog","constant","linearish","symlogish","J","setMilliseconds","setSeconds","setMinutes","K","Q","e","precision","a","useUTC","forEach","L","o","W","s","l","m","stacked","h","clamp","g","minStacked","maxStacked","T","X","type","Y","all","nn","tn","utcSecond","utcFormat","UTC","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeFormat","rn","some","Error","en","cn","pn","hn","M","getTime","w","b","S","D","C","U","O","R","H","V","q","A","B","F","N","I","P","gn","Object","keys","xn","RegExp","join","kn","isArray","match","Number","axis","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","lineX","lineY","textX","textY","document","dir","center","baseline","top","bottom","left","key","valueOf","value","textAlign","textBaseline","width","height","x2","y1","y2","onClick","textAnchor","animatedProps","opacity","style","cursor","children","line","dominantBaseline","textTransform","text","renderTick","legend","legendPosition","legendOffset","ariaHidden","G","Z","animate","$","config","lineX2","lineY2","immediate","tt","initial","enter","update","leave","tickIndex","rotate","xScale","yScale","grid","lines","xValues","yValues","theme","save","translate","font","fontWeight","fontSize","fontFamily","strokeWidth","lineWidth","lineCap","stroke","strokeStyle","beginPath","moveTo","lineTo","fill","fillStyle","fillText","String","restore","prototype","stackValue","bars","annotations","data","getPosition","getDimensions","size","legends","toggleSerie","containerWidth","containerHeight","dataFrom","indexBy","groupMode","layout","minValue","maxValue","valueScale","indexScale","innerPadding","axisBottom","axisLeft","enableGridX","enableGridY","enableLabel","label","labelSkipWidth","labelSkipHeight","labelTextColor","colorBy","colors","scheme","borderRadius","borderWidth","borderColor","isInteractive","tooltip","color","id","formattedValue","enableChip","tooltipLabel","indexValue","initialHiddenIds","markers","ee","layers","barComponent","bar","labelColor","labelOpacity","labelX","labelY","shouldRenderLabel","onMouseEnter","onMouseLeave","isFocusable","ariaLabel","ariaLabelledBy","ariaDescribedBy","showTooltipFromEvent","showTooltipAt","hideTooltip","absX","absY","rx","ry","focusable","tabIndex","onMouseMove","onFocus","onBlur","fillOpacity","labels","pointerEvents","defs","motionConfig","role","ae","pixelRatio","window","devicePixelRatio","ie","te","reduce","ne","re","le","oe","de","ue","repeat","ce","se","formatValue","getColor","getIndex","getTooltipLabel","margin","hidden","index","he","be","hiddenIds","includes","concat","Boolean","ge","ve","fe","stackedData","me","pe","order","orderNone","offsetNone","stack","oz","kz","this","sz","sij","ki","si","call","xe","direction","legendLabel","ye","valueFormat","indexOf","Se","ke","Le","we","Ce","Ve","We","Me","find","Be","barsWithValue","getLabel","getBorderColor","getLabelColor","shouldRenderBarLabel","legendsWithData","axisTop","axisRight","gridXValues","gridYValues","Ie","Te","Re","He","Pe","Ee","Fe","barAriaLabel","Xe","barAriaLabelledBy","Ye","barAriaDescribedBy","De","Oe","Ge","Ae","je","qe","outerWidth","ze","outerHeight","Ke","Ne","innerWidth","Je","innerHeight","Qe","Ue","Ze","$e","_e","ea","aa","ia","ta","na","ra","la","oa","da","ua","dataKey","targetKey","ca","axes","sa","legendData","renderWrapper","renderBar","quadraticCurveTo","closePath","rect","canvasRef","current","getContext","background","fillRect","ref","baseGetTag","require","isObjectLike","dateTag","module","exports","baseEach","isArrayLike","collection","iteratee","result","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","iteratees","orders","object","other","array","comparer","sort","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","LARGE_ARRAY_SIZE","comparator","isCommon","seen","set","outer","computed","seenIndex","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","compareAscending","objCriteria","criteria","othCriteria","ordersLength","Set","noop","baseIsDate","nodeUtil","nodeIsDate","isDate","baseFlatten","baseOrderBy","baseRest","isIterateeCall","sortBy","baseUniq"],"sourceRoot":""}